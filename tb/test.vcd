$date
	Tue Jul 26 10:51:21 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_top $end
$var wire 32 ! result [31:0] $end
$var reg 1 " clk $end
$var reg 1 # reset $end
$var integer 32 $ i [31:0] $end
$scope module dut $end
$var wire 1 " clk $end
$var wire 1 # reset $end
$var wire 32 % result [31:0] $end
$var wire 32 & rs2 [31:0] $end
$var wire 32 ' rs1 [31:0] $end
$var wire 32 ( pc_plus_4 [31:0] $end
$var wire 32 ) pc_out [31:0] $end
$var wire 32 * inst [31:0] $end
$var wire 32 + imm [31:0] $end
$var wire 32 , dmem_out [31:0] $end
$var wire 32 - alu_out [31:0] $end
$var wire 32 . WBSel_out [31:0] $end
$var wire 2 / WBSel [1:0] $end
$var wire 1 0 RegWEn $end
$var wire 1 1 PCSel $end
$var wire 1 2 MemRW $end
$var wire 3 3 ImmSel [2:0] $end
$var wire 32 4 Bsel_out [31:0] $end
$var wire 1 5 Bsel $end
$var wire 1 6 BrUn $end
$var wire 1 7 BrLT $end
$var wire 1 8 BrEq $end
$var wire 32 9 Asel_out [31:0] $end
$var wire 1 : Asel $end
$var wire 4 ; ALUSel [3:0] $end
$scope module Alu $end
$var wire 32 < A [31:0] $end
$var wire 32 = B [31:0] $end
$var wire 4 > ALUSel [3:0] $end
$var reg 32 ? result [31:0] $end
$upscope $end
$scope module Controller $end
$var wire 7 @ opcode [6:0] $end
$var wire 32 A inst [31:0] $end
$var wire 1 B func7 $end
$var wire 3 C func3 [2:0] $end
$var wire 1 7 BrLT $end
$var wire 1 8 BrEq $end
$var reg 4 D ALUSel [3:0] $end
$var reg 1 : Asel $end
$var reg 1 6 BrUn $end
$var reg 1 5 Bsel $end
$var reg 3 E ImmSel [2:0] $end
$var reg 1 2 MemRW $end
$var reg 1 1 PCSel $end
$var reg 1 0 RegWEn $end
$var reg 2 F WBSel [1:0] $end
$upscope $end
$scope module branchComp $end
$var wire 1 6 BrUn $end
$var wire 32 G rs2 [31:0] $end
$var wire 32 H rs1 [31:0] $end
$var wire 1 8 BrEq $end
$var reg 1 7 BrLT $end
$var reg 1 I BrLT_temp $end
$upscope $end
$scope module immGen $end
$var wire 3 J ImmSel [2:0] $end
$var wire 25 K sub_instr [31:7] $end
$var reg 32 L imm [31:0] $end
$upscope $end
$scope module instFetch $end
$var wire 1 1 PCSel $end
$var wire 1 " clk $end
$var wire 32 M from_alu [31:0] $end
$var wire 1 # reset $end
$var wire 32 N pc_plus_4 [31:0] $end
$var wire 32 O pc_out [31:0] $end
$var wire 32 P inst [31:0] $end
$var wire 32 Q if_mux_out [31:0] $end
$scope module PC $end
$var wire 1 " clk $end
$var wire 1 # reset $end
$var wire 32 R data_in [31:0] $end
$var reg 32 S data_out [31:0] $end
$upscope $end
$scope module if_mux $end
$var wire 32 T port0 [31:0] $end
$var wire 32 U port1 [31:0] $end
$var wire 1 1 sel $end
$var wire 32 V result [31:0] $end
$upscope $end
$scope module instruction_memory $end
$var wire 32 W addr [31:0] $end
$var wire 32 X data_out [31:0] $end
$upscope $end
$upscope $end
$scope module memAccess $end
$var wire 1 2 MemRW $end
$var wire 32 Y addr [31:0] $end
$var wire 1 " clk $end
$var wire 32 Z data_out [31:0] $end
$var wire 32 [ data_in [31:0] $end
$scope module dataMemory $end
$var wire 1 2 MemRW $end
$var wire 32 \ addr [31:0] $end
$var wire 1 " clk $end
$var wire 32 ] data_out [31:0] $end
$var wire 32 ^ data_in [31:0] $end
$upscope $end
$upscope $end
$scope module regFile $end
$var wire 1 0 RegWEn $end
$var wire 5 _ addrA [4:0] $end
$var wire 5 ` addrB [4:0] $end
$var wire 5 a addrD [4:0] $end
$var wire 1 " clk $end
$var wire 1 # reset $end
$var wire 32 b dataD [31:0] $end
$var reg 32 c dataA [31:0] $end
$var reg 32 d dataB [31:0] $end
$var reg 6 e i [5:0] $end
$upscope $end
$scope module writeBack $end
$var wire 2 f WBSel [1:0] $end
$var wire 32 g from_alu [31:0] $end
$var wire 32 h from_dmem [31:0] $end
$var wire 32 i pc_plus_4 [31:0] $end
$var reg 32 j to_regfile [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
bx `
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
bx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
xI
bx H
bx G
bx F
bx E
bx D
bx C
xB
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
x:
bx 9
x8
x7
x6
x5
bx 4
bx 3
x2
x1
x0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
1#
0"
bx !
$end
#5000
b10000000000000000000000000000 .
b10000000000000000000000000000 b
b10000000000000000000000000000 j
b10000000000000000000000000000 !
b10000000000000000000000000000 %
b10000000000000000000000000000 -
b10000000000000000000000000000 ?
b10000000000000000000000000000 M
b10000000000000000000000000000 U
b10000000000000000000000000000 Y
b10000000000000000000000000000 \
b10000000000000000000000000000 g
b10000000000000000000000000000 4
b10000000000000000000000000000 =
b0 9
b0 <
07
0I
b10000000000000000000000000000 +
b10000000000000000000000000000 L
b100 Q
b100 R
b100 V
18
b0 &
b0 G
b0 [
b0 ^
b0 d
b0 '
b0 H
b0 c
b1 /
b1 F
b1 f
02
b0 ;
b0 >
b0 D
1:
15
06
10
b100 3
b100 E
b100 J
01
0B
b0 `
b0 C
b0 _
b10111 @
b101 a
b1000000000000000000101 K
b10000000000000000001010010111 *
b10000000000000000001010010111 A
b10000000000000000001010010111 P
b10000000000000000001010010111 X
b100 (
b100 N
b100 T
b100 i
b0 )
b0 O
b0 S
b0 W
b100000 e
1"
#10000
0"
0#
#15000
b0 4
b0 =
b10000000000000000000000000000 .
b10000000000000000000000000000 b
b10000000000000000000000000000 j
b0 +
b0 L
0:
b1 3
b1 E
b1 J
b10000000000000000000000000000 !
b10000000000000000000000000000 %
b10000000000000000000000000000 -
b10000000000000000000000000000 ?
b10000000000000000000000000000 M
b10000000000000000000000000000 U
b10000000000000000000000000000 Y
b10000000000000000000000000000 \
b10000000000000000000000000000 g
08
b10000000000000000000000000000 '
b10000000000000000000000000000 H
b10000000000000000000000000000 c
b101 _
b10100000101 K
b10011 @
b1000 Q
b1000 R
b1000 V
b10000000000000000000000000000 9
b10000000000000000000000000000 <
b101000001010010011 *
b101000001010010011 A
b101000001010010011 P
b101000001010010011 X
b1000 (
b1000 N
b1000 T
b1000 i
b100 )
b100 O
b100 S
b100 W
1"
#20000
0"
#25000
bx .
bx b
bx j
b0 /
b0 F
b0 f
b10 C
b11 @
b1010 a
b10101001010 K
b1100 Q
b1100 R
b1100 V
b101010010100000011 *
b101010010100000011 A
b101010010100000011 P
b101010010100000011 X
b1100 (
b1100 N
b1100 T
b1100 i
b1000 )
b1000 O
b1000 S
b1000 W
1"
#30000
0"
#35000
b10100 !
b10100 %
b10100 -
b10100 ?
b10100 M
b10100 U
b10100 Y
b10100 \
b10100 g
b10000 .
b10000 b
b10000 j
b1000 4
b1000 =
b1100 9
b1100 <
b10 /
b10 F
b10 f
1:
b101 3
b101 E
b101 J
11
b1000 +
b1000 L
18
b0 '
b0 H
b0 c
b1000 `
b0 C
b0 _
b1101111 @
b1 a
b10000000000000001 K
b10100 Q
b10100 R
b10100 V
b100000000000000011101111 *
b100000000000000011101111 A
b100000000000000011101111 P
b100000000000000011101111 X
b10000 (
b10000 N
b10000 T
b10000 i
b1100 )
b1100 O
b1100 S
b1100 W
1"
#40000
0"
#45000
x7
xI
b0 4
b0 =
b11000 Q
b11000 R
b11000 V
x8
bx '
bx H
bx c
b0 +
b0 L
b1 /
b1 F
b1 f
0:
b1 3
b1 E
b1 J
01
bx !
bx %
bx -
bx ?
bx M
bx U
bx Y
bx \
bx g
b0 `
b1010 _
b101 a
b101000000101 K
b10011 @
bx .
bx b
bx j
bx 9
bx <
b1010000001010010011 *
b1010000001010010011 A
b1010000001010010011 P
b1010000001010010011 X
b11000 (
b11000 N
b11000 T
b11000 i
b10100 )
b10100 O
b10100 S
b10100 W
1"
#50000
0"
#55000
b11111111111111111111111111111000 .
b11111111111111111111111111111000 b
b11111111111111111111111111111000 j
b11111111111111111111111111111000 !
b11111111111111111111111111111000 %
b11111111111111111111111111111000 -
b11111111111111111111111111111000 ?
b11111111111111111111111111111000 M
b11111111111111111111111111111000 U
b11111111111111111111111111111000 Y
b11111111111111111111111111111000 \
b11111111111111111111111111111000 g
b11111111111111111111111111111000 4
b11111111111111111111111111111000 =
b0 9
b0 <
07
0I
b11111111111111111111111111111000 +
b11111111111111111111111111111000 L
18
b0 '
b0 H
b0 c
1B
b11000 `
b10 _
b10 a
b1111111110000001000000010 K
b11100 Q
b11100 R
b11100 V
b11111111100000010000000100010011 *
b11111111100000010000000100010011 A
b11111111100000010000000100010011 P
b11111111100000010000000100010011 X
b11100 (
b11100 N
b11100 T
b11100 i
b11000 )
b11000 O
b11000 S
b11000 W
1"
#60000
0"
#65000
b11111111111111111111111111111000 .
b11111111111111111111111111111000 b
b11111111111111111111111111111000 j
b0 4
b0 =
b11111111111111111111111111111000 !
b11111111111111111111111111111000 %
b11111111111111111111111111111000 -
b11111111111111111111111111111000 ?
b11111111111111111111111111111000 M
b11111111111111111111111111111000 U
b11111111111111111111111111111000 Y
b11111111111111111111111111111000 \
b11111111111111111111111111111000 g
b10000 &
b10000 G
b10000 [
b10000 ^
b10000 d
b0 +
b0 L
12
00
b10 3
b10 E
b10 J
b11111111111111111111111111111000 9
b11111111111111111111111111111000 <
17
0B
b1 `
b10 C
b0 a
b10001001000000 K
b100011 @
b100000 Q
b100000 R
b100000 V
08
b11111111111111111111111111111000 '
b11111111111111111111111111111000 H
b11111111111111111111111111111000 c
b100010010000000100011 *
b100010010000000100011 A
b100010010000000100011 P
b100010010000000100011 X
b100000 (
b100000 N
b100000 T
b100000 i
b11100 )
b11100 O
b11100 S
b11100 W
1"
#70000
0"
#75000
b1000100 !
b1000100 %
b1000100 -
b1000100 ?
b1000100 M
b1000100 U
b1000100 Y
b1000100 \
b1000100 g
x1
b100000 9
b100000 <
x7
xI
b100100 4
b100100 =
bx .
bx b
bx j
b0 &
b0 G
b0 [
b0 ^
b0 d
x8
bx '
bx H
bx c
b100100 +
b100100 L
b0 /
b0 F
b0 f
02
1:
b11 3
b11 E
b11 J
b0 `
b0 C
b100 a
b101 _
b1000000010100000100 K
b1100011 @
b0xx00100 Q
b0xx00100 R
b0xx00100 V
b10000000101000001001100011 *
b10000000101000001001100011 A
b10000000101000001001100011 P
b10000000101000001001100011 X
b100100 (
b100100 N
b100100 T
b100100 i
b100000 )
b100000 O
b100000 S
b100000 W
1"
#80000
0"
#85000
bx 4
bx =
bx &
bx G
bx [
bx ^
bx d
bx /
bx F
bx f
x2
bx ;
bx >
bx D
x:
x5
x6
x0
bx 3
bx E
bx J
bx0 +
bx0 L
b0 !
b0 %
b0 -
b0 ?
b0 M
b0 U
b0 Y
b0 \
b0 g
xB
bx `
bx C
bx _
bx @
bx a
bx K
bx Q
bx R
bx V
bx 9
bx <
bx *
bx A
bx P
bx X
bx (
bx N
bx T
bx i
b0xx00100 )
b0xx00100 O
b0xx00100 S
b0xx00100 W
1"
#90000
0"
#95000
bx )
bx O
bx S
bx W
1"
#100000
0"
#105000
1"
#110000
0"
#115000
1"
#120000
0"
#125000
1"
#130000
0"
#135000
1"
#140000
0"
#145000
1"
#150000
0"
#155000
1"
#160000
0"
#165000
1"
#170000
0"
#175000
1"
#180000
0"
#185000
1"
#190000
0"
#195000
1"
#200000
0"
#205000
1"
#210000
0"
#215000
1"
#220000
0"
#225000
1"
#230000
0"
#235000
1"
#240000
0"
#245000
1"
#250000
0"
#255000
1"
#260000
0"
#265000
1"
#270000
0"
#275000
1"
#280000
0"
#285000
1"
#290000
0"
#295000
1"
#300000
0"
#305000
1"
#310000
0"
#315000
1"
#320000
0"
#325000
1"
#330000
0"
#335000
1"
#340000
0"
#345000
1"
#350000
0"
#355000
1"
#360000
0"
#365000
1"
#370000
0"
#375000
1"
#380000
0"
#385000
1"
#390000
0"
#395000
1"
#400000
0"
#405000
1"
#410000
0"
b100000 $
#415000
1"
#420000
0"
#425000
1"
#430000
0"
#435000
1"
#440000
0"
#445000
1"
#450000
0"
#455000
1"
#460000
0"
#465000
1"
#470000
0"
#475000
1"
#480000
0"
#485000
1"
#490000
0"
#495000
1"
#500000
0"
#505000
1"
#510000
0"
#515000
1"
#520000
0"
#525000
1"
#530000
0"
#535000
1"
#540000
0"
#545000
1"
#550000
0"
#555000
1"
#560000
0"
#565000
1"
#570000
0"
#575000
1"
#580000
0"
#585000
1"
#590000
0"
#595000
1"
#600000
0"
#605000
1"
#610000
0"
#615000
1"
#620000
0"
#625000
1"
#630000
0"
#635000
1"
#640000
0"
#645000
1"
#650000
0"
#655000
1"
#660000
0"
#665000
1"
#670000
0"
#675000
1"
#680000
0"
#685000
1"
#690000
0"
#695000
1"
#700000
0"
#705000
1"
#710000
0"
#715000
1"
#720000
0"
#725000
1"
#730000
0"
#735000
1"
#740000
0"
#745000
1"
#750000
0"
#755000
1"
#760000
0"
#765000
1"
#770000
0"
#775000
1"
#780000
0"
#785000
1"
#790000
0"
#795000
1"
#800000
0"
#805000
1"
#810000
0"
#815000
1"
#820000
0"
#825000
1"
#830000
0"
#835000
1"
#840000
0"
#845000
1"
#850000
0"
#855000
1"
#860000
0"
#865000
1"
#870000
0"
#875000
1"
#880000
0"
#885000
1"
#890000
0"
#895000
1"
#900000
0"
#905000
1"
#910000
0"
